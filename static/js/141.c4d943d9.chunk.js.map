{"version":3,"file":"static/js/141.c4d943d9.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/movieAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieItem = ({ id, title, state }) => {\n  return (\n    <li>\n      <Link to={`/goit-react-hw-05-movies/movies/${id}`} state={state}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  state: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport MovieItem from 'components/MovieItem';\n\nconst MovieList = ({ movies, state }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id} id={id} title={title} state={state} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n  state: PropTypes.any,\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  margin-right: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovie } from 'services/movieAPI';\nimport MovieList from 'components/MovieList';\nimport { Bars } from 'react-loader-spinner';\nimport { Input } from './Movies.styled';\nimport Error from 'components/Error';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value;\n    setSearchParams({ query });\n    e.target.reset();\n  };\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const getMovie = async () => {\n      setIsLoading(true);\n      try {\n        const response = await searchMovie(query);\n\n        setMovies(response.data.results);\n      } catch (error) {\n        setErrorMessage(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovie();\n  }, [query]);\n\n  return (\n    <main>\n      <h2>Search movies</h2>\n      <form onSubmit={handleSubmit}>\n        <Input name=\"query\" type=\"text\"></Input>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {isLoading && (\n        <Bars\n          height=\"40\"\n          width=\"40\"\n          color=\"#280232\"\n          ariaLabel=\"bars-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      {movies.length > 0 && (\n        <MovieList movies={movies} state={{ from: location }} />\n      )}\n      {errorMessage && <Error />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '6251e629c61bceaf56a3d45f05637256';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieApi = axios.create({\n  baseURL: BASE_URL,\n});\n\nconst config = { params: { api_key: API_KEY } };\n\nexport const fetchTrendingMovie = async () => {\n  const response = await movieApi('/trending/movie/day', config);\n  return response;\n};\n\nexport const getMovieById = async id => {\n  const response = await movieApi(`/movie/${id}`, config);\n  return response.data;\n};\n\n// Функція отримання даних про акторський склад\nexport const getMovieCast = async id => {\n  const response = await movieApi(`/movie/${id}/credits`, config);\n  return response.data;\n};\n// Треба такі дані для картки акторів\n// profile_path;\n// character;\n// name;\n// =============================================\n\n// Функція отримання даних Reviews\nexport const getMovieReviews = async id => {\n  const response = await movieApi(`/movie/${id}/reviews`, config);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const searchConfig = { params: { api_key: API_KEY, query: query } };\n  const response = await movieApi('/search/movie', searchConfig);\n  return response;\n};\n\n// МАСИВ ЖАНРІВ ПОДУМАТИ ЯК ВИКОРИСТАТИ І КУДИ ВНЕСТИ ДАНІ\n// https://api.themoviedb.org/3/genre/movie/list?api_key=6251e629c61bceaf56a3d45f05637256\n\n// genres;\n// vote_average;\n// overview;\n// original_title;\n// poster_path;\n\n// /movie/{movie_id}/credits\n\n// /movie/{movie_id}/reviews\n"],"names":["id","title","state","to","movies","map","Input","styled","useSearchParams","searchParams","setSearchParams","useState","setMovies","isLoading","setIsLoading","errorMessage","setErrorMessage","location","useLocation","query","get","useEffect","getMovie","searchMovie","response","data","results","message","onSubmit","e","preventDefault","target","elements","value","reset","name","type","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","length","MovieList","from","API_KEY","movieApi","axios","baseURL","config","params","api_key","fetchTrendingMovie","getMovieById","getMovieCast","getMovieReviews","searchConfig"],"sourceRoot":""}