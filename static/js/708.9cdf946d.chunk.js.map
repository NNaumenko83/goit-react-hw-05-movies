{"version":3,"file":"static/js/708.9cdf946d.chunk.js","mappings":"qTAYA,EAToB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC7B,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAGT,EC+CD,EAjDgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,IAAgBJ,GAFtB,OAEXK,EAFW,OAIjBV,EAAWU,GAJM,gDAMjBN,EAAgB,KAAMO,SANL,yBAQjBT,GAAa,GARI,4EAAH,qDAWlBM,GACD,GAAE,CAACH,KAGF,gCACGJ,IACC,SAAC,KAAD,CACEW,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IAGZnB,EAAQoB,OAAS,GAChB,wBACGpB,EAAQqB,KAAI,gBAAGxB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASwB,EAApB,EAAoBA,GAApB,OACX,SAAC,EAAD,CAAsBzB,OAAQA,EAAQC,QAASA,GAA7BwB,EADP,OAKf,qEAEDlB,IAAgB,SAAC,IAAD,MAGtB,C,gNCrDKmB,EAAU,mCAGVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAHe,iCAMXC,EAAS,CAAEC,OAAQ,CAAEC,QAASN,IAEvBO,EAAkB,mCAAG,oGACTN,EAAS,sBAAuBG,GADvB,cAC1BhB,EAD0B,yBAEzBA,GAFyB,2CAAH,qDAKlBoB,EAAY,mCAAG,WAAMT,GAAN,uFACHE,EAAS,UAAD,OAAWF,GAAMK,GADtB,cACpBhB,EADoB,yBAEnBA,EAASqB,MAFU,2CAAH,sDAMZC,EAAY,mCAAG,WAAMX,GAAN,uFACHE,EAAS,UAAD,OAAWF,EAAX,YAAyBK,GAD9B,cACpBhB,EADoB,yBAEnBA,EAASqB,MAFU,2CAAH,sDAWZtB,EAAe,mCAAG,WAAMY,GAAN,uFACNE,EAAS,UAAD,OAAWF,EAAX,YAAyBK,GAD3B,cACvBhB,EADuB,yBAEtBA,EAASqB,KAAKE,SAFQ,2CAAH,sDAKfC,EAAW,mCAAG,WAAMC,GAAN,gFACnBC,EAAe,CAAET,OAAQ,CAAEC,QAASN,EAASa,MAAOA,IADjC,SAEFZ,EAAS,gBAAiBa,GAFxB,cAEnB1B,EAFmB,yBAGlBA,GAHkB,2CAAH,qD","sources":["components/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.jsx","services/movieAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ReviewsItem = ({ author, content }) => {\n  return (\n    <li>\n      <h3>Author: {author}</h3>\n      <p>{content}</p>\n    </li>\n  );\n};\n\nexport default ReviewsItem;\n\nReviewsItem.propTypes = {\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movieAPI';\nimport { Bars } from 'react-loader-spinner';\nimport Error from 'components/Error';\n\nimport ReviewsItem from 'components/ReviewsItem';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchRewiews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n\n        setReviews(response);\n      } catch (error) {\n        setErrorMessage(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchRewiews();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <Bars\n          height=\"40\"\n          width=\"40\"\n          color=\"#280232\"\n          ariaLabel=\"bars-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <ReviewsItem key={id} author={author} content={content} />\n          ))}\n        </ul>\n      ) : (\n        <h3>We don't have any reviews for this movie</h3>\n      )}\n      {errorMessage && <Error />}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '6251e629c61bceaf56a3d45f05637256';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieApi = axios.create({\n  baseURL: BASE_URL,\n});\n\nconst config = { params: { api_key: API_KEY } };\n\nexport const fetchTrendingMovie = async () => {\n  const response = await movieApi('/trending/movie/day', config);\n  return response;\n};\n\nexport const getMovieById = async id => {\n  const response = await movieApi(`/movie/${id}`, config);\n  return response.data;\n};\n\n// Функція отримання даних про акторський склад\nexport const getMovieCast = async id => {\n  const response = await movieApi(`/movie/${id}/credits`, config);\n  return response.data;\n};\n// Треба такі дані для картки акторів\n// profile_path;\n// character;\n// name;\n// =============================================\n\n// Функція отримання даних Reviews\nexport const getMovieReviews = async id => {\n  const response = await movieApi(`/movie/${id}/reviews`, config);\n  return response.data.results;\n};\n\nexport const searchMovie = async query => {\n  const searchConfig = { params: { api_key: API_KEY, query: query } };\n  const response = await movieApi('/search/movie', searchConfig);\n  return response;\n};\n\n// МАСИВ ЖАНРІВ ПОДУМАТИ ЯК ВИКОРИСТАТИ І КУДИ ВНЕСТИ ДАНІ\n// https://api.themoviedb.org/3/genre/movie/list?api_key=6251e629c61bceaf56a3d45f05637256\n\n// genres;\n// vote_average;\n// overview;\n// original_title;\n// poster_path;\n\n// /movie/{movie_id}/credits\n\n// /movie/{movie_id}/reviews\n"],"names":["author","content","useState","reviews","setReviews","isLoading","setIsLoading","errorMessage","setErrorMessage","movieId","useParams","useEffect","fetchRewiews","getMovieReviews","response","message","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","length","map","id","API_KEY","movieApi","axios","baseURL","config","params","api_key","fetchTrendingMovie","getMovieById","data","getMovieCast","results","searchMovie","query","searchConfig"],"sourceRoot":""}